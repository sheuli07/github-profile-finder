{"version":3,"sources":["component/card/card.js","views/searchResultContainer.js","views/home.js","component/appbar/topnav.js","services/userSearchService.js","redux/userSearch/userAction.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","display","flexDirection","alignItems","large","width","spacing","height","MediaCard","props","username","avtar","classes","Card","className","elevation","Avatar","src","CardContent","Typography","gutterBottom","variant","component","CardActions","to","pathname","search","state","Button","size","color","connect","userSearch","user","Grid","container","justify","items","map","item","key","id","login","avatar_url","textareaStyle","marginTop","dispatch","readUser","data","userSearchList","setSerchUser","value","setSearchUser","clearsearchUser","Container","xs","sm","md","lg","xl","TextField","placeholder","fullWidth","margin","searchUserValue","onChange","event","target","onClick","grow","flexGrow","marginBottom","menuButton","marginRight","title","breakpoints","up","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","homeIconStyle","PrimarySearchAppBar","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","edge","aria-label","noWrap","aria-controls","aria-haspopup","currentTarget","userSearchService","name","axios","get","params","q","type","USER_SEARCH_REQUEST","then","res","USER_SEARCH_SUCCESS","payload","userSearchSuccess","catch","err","console","log","USER_SEARCH_FAILED","readProfile","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","profileSuccess","USER_PROFILE_FAILED","userRepoList","USER_REPO_SEARCH_REQUEST","USER_REPO_SEARCH_SUCCESS","repoSerchSuccess","error","USER_REPO_SEARCH_FAILED","SEARCH_USER_VALUE_CHANGE","SEARCH_USER_VALUE_CLEAR"],"mappings":"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","file":"static/js/5.37300c18.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Button, Avatar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 200,\n        minWidth: 200,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n}));\n\nexport default function MediaCard(props) {\n    const { username, avtar } = props;\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} elevation={4}>\n            <Avatar src={avtar} className={classes.large}></Avatar>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {username}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Link\n                    to={{\n                        pathname: \"/details\",\n                        search: `user=${username}`,\n                        // hash: \"#the-hash\",\n                        state: { username: username },\n                    }}\n                >\n                    <Button size=\"small\" color=\"primary\" variant=\"contained\">\n                        View Profile\n                    </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport Card from \"../component/card/card\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nfunction SearchResultContainer(props) {\n    return (\n        <Grid container spacing={5} justify=\"center\">\n            {props.userSearch.items &&\n                props.userSearch.items.map((items) => {\n                    return (\n                        <Grid item key={items.id}>\n                            <Card username={items.login} avtar={items.avatar_url} />\n                        </Grid>\n                    );\n                })}\n        </Grid>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userSearch: state.user,\n    };\n};\n\nexport default connect(mapStateToProps)(SearchResultContainer);\n","import React from \"react\";\nimport { Grid, TextField, Container, Button, makeStyles, Typography } from \"@material-ui/core\";\nimport TopNav from \"../component/appbar/topnav\";\nimport { connect } from \"react-redux\";\nimport { userSearchList, setSearchUser, clearsearchUser } from \"../redux/userSearch/userAction\";\nimport SearchResultContainer from \"./searchResultContainer\";\n\nconst useStyles = makeStyles(() => ({\n    textareaStyle: {\n        marginTop: \"2em\",\n    },\n}));\n\nfunction Home(props) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <TopNav />\n            <Container>\n                <Grid container justify=\"center\" className={classes.textareaStyle} spacing={2}>\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\n                        <TextField\n                            id=\"outlined-full-width\"\n                            placeholder=\"Search Users...\"\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={props.user.searchUserValue}\n                            onChange={(event) => props.setSerchUser(event.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            fullWidth\n                            onClick={() => {\n                                props.readUser(props.user.searchUserValue);\n                            }}\n                        >\n                            Search\n                        </Button>\n                    </Grid>\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\n                        <Button variant=\"contained\" fullWidth onClick={() => props.clearsearchUser()}>\n                            Clear\n                        </Button>\n                    </Grid>\n                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\n                        <SearchResultContainer />\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        readUser: (data) => dispatch(userSearchList(data)),\n        setSerchUser: (value) => dispatch(setSearchUser(value)),\n        clearsearchUser: () => dispatch(clearsearchUser()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n        marginBottom: \"5em\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    homeIconStyle: {\n        color: \"white\",\n    },\n}));\n\nexport default function PrimarySearchAppBar() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\n                        <GitHubIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Github Finder\n                    </Typography>\n\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <Link to={{ pathname: \"/home\" }}>\n                            <IconButton aria-label=\"\" color=\"default\" className={classes.homeIconStyle}>\n                                <Badge\n                                    // badgeContent={}\n                                    color=\"secondary\"\n                                >\n                                    <HomeIcon />\n                                </Badge>\n                            </IconButton>\n                        </Link>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            {/* <MoreIcon /> */}\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {/* {renderMobileMenu} */}\n            {/* {renderMenu} */}\n        </div>\n    );\n}\n","import axios from \"axios\";\n\nexport const userSearchService = {\n    userList: (name) => {\n        return axios.get(\"https://api.github.com/search/users\", {\n            params: {\n                q: name,\n            },\n        });\n    },\n\n    userDetails: (name) => {\n        return axios.get(`https://api.github.com/users/${name}`);\n    },\n\n    userRepoList: (name) => {\n        return axios.get(`https://api.github.com/users/${name}/repos`);\n    },\n};\n","import {\n    USER_SEARCH_REQUEST,\n    USER_SEARCH_SUCCESS,\n    USER_SEARCH_FAILED,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAILED,\n    USER_REPO_SEARCH_REQUEST,\n    USER_REPO_SEARCH_SUCCESS,\n    USER_REPO_SEARCH_FAILED,\n    SEARCH_USER_VALUE_CHANGE,\n    SEARCH_USER_VALUE_CLEAR,\n} from \"./actionType\";\nimport { userSearchService } from \"../../services/userSearchService\";\n\n// Action for User Search\nconst userSearchRequest = () => ({\n    type: USER_SEARCH_REQUEST,\n});\n\nconst userSearchSuccess = (data) => ({\n    type: USER_SEARCH_SUCCESS,\n    payload: data,\n});\n\nconst userSearchFailed = () => ({\n    type: USER_SEARCH_FAILED,\n});\n\nexport const userSearchList = (data) => {\n    return (dispatch) => {\n        dispatch(userSearchRequest());\n\n        userSearchService\n            .userList(data)\n            .then((res) => {\n                // console.log(res);\n                dispatch(userSearchSuccess(res.data));\n            })\n\n            .catch((err) => {\n                console.log(err);\n                dispatch(userSearchFailed());\n            });\n    };\n};\n\n//Action for user profile details\n\nconst profileRequest = () => ({\n    type: USER_PROFILE_REQUEST,\n});\n\nconst profileSuccess = (data) => ({\n    type: USER_PROFILE_SUCCESS,\n    payload: data,\n});\n\nconst profileFailed = () => ({\n    type: USER_PROFILE_FAILED,\n});\n\nexport const readProfile = (data) => {\n    return (dispatch) => {\n        dispatch(profileRequest());\n\n        userSearchService\n            .userDetails(data)\n            .then((res) => {\n                // console.log(\"inside readprofile call data\");\n                // console.log(res);\n                dispatch(profileSuccess(res.data));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(profileFailed());\n            });\n    };\n};\n\n//Action for user project list\n\nconst repoSearchRequest = () => ({\n    type: USER_REPO_SEARCH_REQUEST,\n});\n\nconst repoSerchSuccess = (data) => ({\n    type: USER_REPO_SEARCH_SUCCESS,\n    payload: data,\n});\n\nconst repoSearchFailed = () => ({\n    type: USER_REPO_SEARCH_FAILED,\n});\n\nexport const userRepoList = (data) => {\n    return (dispatch) => {\n        dispatch(repoSearchRequest());\n\n        userSearchService\n            .userRepoList(data)\n            .then((res) => {\n                dispatch(repoSerchSuccess(res.data));\n            })\n            .catch((error) => {\n                console.log(error);\n                dispatch(repoSearchFailed());\n            });\n    };\n};\n\nexport const setSearchUser = (value) => {\n    return {\n        type: SEARCH_USER_VALUE_CHANGE,\n        payload: value,\n    };\n};\n\nexport const clearsearchUser = () => {\n    return {\n        type: SEARCH_USER_VALUE_CLEAR,\n    };\n};\n"],"sourceRoot":""}